//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity rightJoystickTouchingEntity { get { return GetGroup(InputMatcher.RightJoystickTouching).GetSingleEntity(); } }
    public Project0.RightJoystickTouchingComponent rightJoystickTouching { get { return rightJoystickTouchingEntity.rightJoystickTouching; } }
    public bool hasRightJoystickTouching { get { return rightJoystickTouchingEntity != null; } }

    public InputEntity SetRightJoystickTouching(bool newValue) {
        if (hasRightJoystickTouching) {
            throw new Entitas.EntitasException("Could not set RightJoystickTouching!\n" + this + " already has an entity with Project0.RightJoystickTouchingComponent!",
                "You should check if the context already has a rightJoystickTouchingEntity before setting it or use context.ReplaceRightJoystickTouching().");
        }
        var entity = CreateEntity();
        entity.AddRightJoystickTouching(newValue);
        return entity;
    }

    public void ReplaceRightJoystickTouching(bool newValue) {
        var entity = rightJoystickTouchingEntity;
        if (entity == null) {
            entity = SetRightJoystickTouching(newValue);
        } else {
            entity.ReplaceRightJoystickTouching(newValue);
        }
    }

    public void RemoveRightJoystickTouching() {
        rightJoystickTouchingEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Project0.RightJoystickTouchingComponent rightJoystickTouching { get { return (Project0.RightJoystickTouchingComponent)GetComponent(InputComponentsLookup.RightJoystickTouching); } }
    public bool hasRightJoystickTouching { get { return HasComponent(InputComponentsLookup.RightJoystickTouching); } }

    public void AddRightJoystickTouching(bool newValue) {
        var index = InputComponentsLookup.RightJoystickTouching;
        var component = CreateComponent<Project0.RightJoystickTouchingComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRightJoystickTouching(bool newValue) {
        var index = InputComponentsLookup.RightJoystickTouching;
        var component = CreateComponent<Project0.RightJoystickTouchingComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRightJoystickTouching() {
        RemoveComponent(InputComponentsLookup.RightJoystickTouching);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherRightJoystickTouching;

    public static Entitas.IMatcher<InputEntity> RightJoystickTouching {
        get {
            if (_matcherRightJoystickTouching == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.RightJoystickTouching);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherRightJoystickTouching = matcher;
            }

            return _matcherRightJoystickTouching;
        }
    }
}
