//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity leftJoystickTouchingEntity { get { return GetGroup(InputMatcher.LeftJoystickTouching).GetSingleEntity(); } }
    public Project0.LeftJoystickTouchingComponent leftJoystickTouching { get { return leftJoystickTouchingEntity.leftJoystickTouching; } }
    public bool hasLeftJoystickTouching { get { return leftJoystickTouchingEntity != null; } }

    public InputEntity SetLeftJoystickTouching(bool newValue) {
        if (hasLeftJoystickTouching) {
            throw new Entitas.EntitasException("Could not set LeftJoystickTouching!\n" + this + " already has an entity with Project0.LeftJoystickTouchingComponent!",
                "You should check if the context already has a leftJoystickTouchingEntity before setting it or use context.ReplaceLeftJoystickTouching().");
        }
        var entity = CreateEntity();
        entity.AddLeftJoystickTouching(newValue);
        return entity;
    }

    public void ReplaceLeftJoystickTouching(bool newValue) {
        var entity = leftJoystickTouchingEntity;
        if (entity == null) {
            entity = SetLeftJoystickTouching(newValue);
        } else {
            entity.ReplaceLeftJoystickTouching(newValue);
        }
    }

    public void RemoveLeftJoystickTouching() {
        leftJoystickTouchingEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Project0.LeftJoystickTouchingComponent leftJoystickTouching { get { return (Project0.LeftJoystickTouchingComponent)GetComponent(InputComponentsLookup.LeftJoystickTouching); } }
    public bool hasLeftJoystickTouching { get { return HasComponent(InputComponentsLookup.LeftJoystickTouching); } }

    public void AddLeftJoystickTouching(bool newValue) {
        var index = InputComponentsLookup.LeftJoystickTouching;
        var component = CreateComponent<Project0.LeftJoystickTouchingComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLeftJoystickTouching(bool newValue) {
        var index = InputComponentsLookup.LeftJoystickTouching;
        var component = CreateComponent<Project0.LeftJoystickTouchingComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLeftJoystickTouching() {
        RemoveComponent(InputComponentsLookup.LeftJoystickTouching);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherLeftJoystickTouching;

    public static Entitas.IMatcher<InputEntity> LeftJoystickTouching {
        get {
            if (_matcherLeftJoystickTouching == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.LeftJoystickTouching);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherLeftJoystickTouching = matcher;
            }

            return _matcherLeftJoystickTouching;
        }
    }
}
