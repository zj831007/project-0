//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity godEntity { get { return GetGroup(GameMatcher.God).GetSingleEntity(); } }
    public Project0.GodComponent god { get { return godEntity.god; } }
    public bool hasGod { get { return godEntity != null; } }

    public GameEntity SetGod(float newSpeed) {
        if (hasGod) {
            throw new Entitas.EntitasException("Could not set God!\n" + this + " already has an entity with Project0.GodComponent!",
                "You should check if the context already has a godEntity before setting it or use context.ReplaceGod().");
        }
        var entity = CreateEntity();
        entity.AddGod(newSpeed);
        return entity;
    }

    public void ReplaceGod(float newSpeed) {
        var entity = godEntity;
        if (entity == null) {
            entity = SetGod(newSpeed);
        } else {
            entity.ReplaceGod(newSpeed);
        }
    }

    public void RemoveGod() {
        godEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Project0.GodComponent god { get { return (Project0.GodComponent)GetComponent(GameComponentsLookup.God); } }
    public bool hasGod { get { return HasComponent(GameComponentsLookup.God); } }

    public void AddGod(float newSpeed) {
        var index = GameComponentsLookup.God;
        var component = CreateComponent<Project0.GodComponent>(index);
        component.speed = newSpeed;
        AddComponent(index, component);
    }

    public void ReplaceGod(float newSpeed) {
        var index = GameComponentsLookup.God;
        var component = CreateComponent<Project0.GodComponent>(index);
        component.speed = newSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveGod() {
        RemoveComponent(GameComponentsLookup.God);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGod;

    public static Entitas.IMatcher<GameEntity> God {
        get {
            if (_matcherGod == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.God);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGod = matcher;
            }

            return _matcherGod;
        }
    }
}
